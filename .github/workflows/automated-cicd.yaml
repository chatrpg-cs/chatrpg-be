name: Java CI
on: [push]
jobs:
  ChatRPG:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout branch
        uses: actions/checkout@v3
      - name: Set up JDK 17
        uses: actions/setup-java@v3
        with:
          java-version: "17"
          distribution: "adopt"
      - name: Build
        run: |
            git pull
            mvn package -DskipTests
            echo "CURRENT_BRANCH=$(git rev-parse --abbrev-ref HEAD)" >> $GITHUB_ENV
      - name: Format code to pattern
        uses: actions-js/push@master
        with:
          message: "Automated commit: fix code style according to format"
          branch: ${{env.CURRENT_BRANCH}}
          author_email: 'github-actions[bot]@users.noreply.github.com'
          github_token: ${{secrets.GITHUB_TOKEN}}
      - name: Unit tests
        if: github.ref != 'refs/heads/master'
        run: mvn test
      - name: Code coverage
        if: github.ref == 'refs/heads/master'
        uses: paambaati/codeclimate-action@v3.2.0
        env:
          CC_TEST_REPORTER_ID: ${{secrets.CC_TEST_REPORTER_ID}}
          JACOCO_SOURCE_PATH: "${{github.workspace}}/src/main/java"
        with:
          coverageCommand: mvn test
          coverageLocations: ${{github.workspace}}/target/site/jacoco/jacoco.xml:jacoco
      - name: Build and push image to GitLab Container Registry
        run: |
              echo ${{ secrets.GITLAB_ACCESS_TOKEN }} | docker login registry.gitlab.com -u thaalesalves --password-stdin
              docker build -t registry.gitlab.com/thaalesalves/chatrpg:back-end .
              docker push registry.gitlab.com/thaalesalves/chatrpg:back-end
      - name: Deploy to Digital Ocean
        uses: appleboy/ssh-action@master
        with:
          host: ${{ secrets.SSH_HOST }}
          username: ${{ secrets.SSH_USER }}
          key: ${{ secrets.SSH_KEY }}
          script: |
            echo $POSTGRES_HOST
            echo ${{ secrets.GITLAB_ACCESS_TOKEN }} | sudo docker login registry.gitlab.com -u thaalesalves --password-stdin
            sudo docker rm -f chatrpg-be
            sudo docker rmi -f chatrpg:back-end
            sudo docker run -d \
              --name chatrpg-be \
              --hostname chatrpg-be \
              -e DISCORD_BOT_API_TOKEN=$DISCORD_BOT_API_TOKEN \
              -e OPENAI_API_TOKEN=$OPENAI_API_TOKEN \
              -e SPRING_APPLICATION_PROFILES=$SPRING_APPLICATION_PROFILES \
              -e POSTGRES_HOST=$POSTGRES_HOST \
              -e POSTGRES_DB=$POSTGRES_DB \
              -e POSTGRES_USER=$POSTGRES_USER \
              -e POSTGRES_PASSWORD=$POSTGRES_PASSWORD \
              -e CHATRPG_LOG_LEVEL=INFO \
              -p 8080:8080 \
              registry.gitlab.com/thaalesalves/chatrpg:back-end
